{"version":3,"sources":["services/persons.js","components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","exportObj","getAll","axios","get","then","r","data","create","obj","post","update","put","id","remove","delete","Filters","filter","onChange","value","Notification","notification","message","status","className","PersonForm","onSubmit","name","number","onNameChange","onNumberChange","type","Persons","persons","newFilter","onDelete","toLowerCase","includes","map","onClick","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","setNotification","useEffect","personService","resetNotification","setTimeout","Filter","e","target","preventDefault","person","findIndex","console","log","catch","window","confirm","find","p","n","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63c9b8c0.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => axios.get(baseUrl).then((r) => r.data)\r\n\r\nconst create = (obj) => axios.post(baseUrl, obj).then((r) => r.data)\r\n\r\nconst update = (obj) => axios.put(`${baseUrl}/${obj.id}`, obj).then((r) => r.data)\r\n\r\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`).then((r) => r.data)\r\n\r\nconst exportObj = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n}\r\n\r\nexport default exportObj\r\n","const Filters = ({ filter, onChange }) => {\r\n  return (\r\n    <p>\r\n      filter shown with: <input value={filter} onChange={onChange} />\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import './Notification.css'\r\n\r\nconst Notification = ({ notification: { message, status } }) => {\r\n  if (message === null) return null\r\n\r\n  return <div className={status}>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","const PersonForm = ({ onSubmit, name, number, onNameChange, onNumberChange }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={name} onChange={onNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={number} onChange={onNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type='submit'>add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","const Persons = ({ persons, newFilter, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {persons\r\n        .filter((r) => r.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n        .map((r) => (\r\n          <li key={r.name}>\r\n            {r.name} {r.number}{' '}\r\n            <button value={r.id} onClick={onDelete}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import { useState, useEffect } from 'react'\n\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n\n  const [notification, setNotification] = useState({\n    message: '',\n    status: '',\n  })\n\n  useEffect(() => {\n    personService.getAll().then((r) => setPersons(r))\n  }, [])\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    let person = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.findIndex((r) => r.name === newName) === -1) {\n      personService\n        .create(person)\n        .then((r) => {\n          console.log(r)\n          setPersons(r)\n          setNewName('')\n          setNewNumber('')\n\n          setNotification({\n            message: 'Person created',\n            status: 'success',\n          })\n        })\n        .catch(() => {\n          setNotification({\n            message: 'Something went wrong...',\n            status: 'error',\n          })\n        })\n\n      return resetNotification()\n    }\n\n    if (!window.confirm(`${newName} is already added, replace the old number with new?`)) return\n\n    person = persons.find((r) => r.name === newName)\n    person.number = newNumber\n\n    personService\n      .update(person)\n      .then((r) => {\n        setPersons(persons.map((p) => (p.id !== person.id ? p : r)))\n\n        setNotification({\n          message: 'Person updated',\n          status: 'success',\n        })\n      })\n      .catch(() => {\n        setNotification({\n          message: `Information of ${newName} has already been removed from server`,\n          status: 'error',\n        })\n\n        setPersons([...persons].filter((n) => n.id !== person.id))\n      })\n\n    resetNotification()\n  }\n\n  const onDelete = (e) => {\n    if (!window.confirm('Do you really want to delete this person?')) return\n\n    const id = parseInt(e.target.value)\n\n    personService\n      .remove(id)\n      .then((r) => {\n        setPersons([...persons].filter((p) => p.id !== id))\n\n        setNotification({\n          message: 'Person deleted',\n          status: 'success',\n        })\n      })\n      .catch(() => {\n        setNotification({\n          message: `Information of ${newName} has already been removed from server`,\n          status: 'error',\n        })\n\n        setPersons([...persons].filter((n) => n.id !== id))\n      })\n\n    resetNotification()\n  }\n\n  const resetNotification = () => {\n    setTimeout(() => {\n      setNotification({\n        message: '',\n        status: '',\n      })\n    }, 3000)\n  }\n\n  const onNameChange = (e) => setNewName(e.target.value)\n  const onNumberChange = (e) => setNewNumber(e.target.value)\n  const onFilterChange = (e) => setNewFilter(e.target.value)\n\n  return (\n    <>\n      <Notification notification={notification} />\n      <h2>Phonebook</h2>\n      <Filter filter={newFilter} onChange={onFilterChange} />\n\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={onSubmit}\n        name={newName}\n        number={newNumber}\n        onNameChange={onNameChange}\n        onNumberChange={onNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} newFilter={newFilter} onDelete={onDelete} />\n    </>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}